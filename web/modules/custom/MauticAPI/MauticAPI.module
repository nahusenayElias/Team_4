<?php

use Drupal\taxonomy\Entity\Vocabulary;
use Drupal\taxonomy\Entity\Term;

function MauticAPI_fetch_mautic_segments() {
  
        $username = $_ENV['API_USER'];
        $api_key = $_ENV['API_KEY'];
        $mautic_url = 'http://appserver.mauticapp.internal';
        $auth = base64_encode($username . ':' . $api_key);
        $client = \Drupal::httpClient();
    
        try {
          $response = $client->get($mautic_url . '/api/segments', [
            'headers' => [
              'Authorization' => 'Basic ' . $auth,
            ],
            'verify' => FALSE,
          ]);

          if ($response->getStatusCode() !== 200) {
            \Drupal::logger('MauticAPI')->error('Failed to fetch segments from Mautic. Status code: @status', ['@status' => $response->getStatusCode()]);
            return [];
          }
    
          $data = json_decode($response->getBody()->getContents(), TRUE);
    
          if (isset($data['lists'])) {
            $segments = $data['lists'];
            \Drupal::state()->set('MauticAPI.mautic_segments', $segments);
            foreach($segments as $segment) {
              $segment[] = $segment['name'];
            }
            return $segments;
          }
          else {
            \Drupal::logger('MauticAPI')->error('Mautic segments not found in the API response.');
            return [];
          }
        }
  catch (\Exception $e) {
    \Drupal::logger('MauticAPI')->error('Failed to fetch Mautic segments: ' . $e->getMessage());
    return [];
  }
}


function MauticAPI_form_alter(array &$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
 if ($form_id === 'node_blog_paragraph_form') {
  $segments = MauticAPI_fetch_mautic_segments();
  if ($segments) {
    $form['mautic_segment'] = [
      '#type' => 'select',
      '#title' => 'Select Mautic Segments',
      '#options' => array_map(function ($segment) {
        return $segment['name'];
      }, $segments),
      '#multiple' => TRUE,
      '#required' => TRUE,
      '#default_value' => isset($form['#node']->mautic_segment) ? $form['#node']->mautic_segment : '',
    ];
  }
  $form_state->set('mautic_segments', $segments);
}
}

function MauticAPI_node_insert(Drupal\node\NodeInterface $node) {
  if ($node->getType() == 'blog_paragraph') {
      if (!empty($node->mautic_segment)) {
          $node->set('field_mautic_segment', $node->mautic_segment);
      }
  }
}

