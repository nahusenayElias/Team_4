<?php

function MauticAPI_fetch_mautic_segments() {
  
        $username = $_ENV['API_USER'];
        $api_key = $_ENV['API_KEY'];
        $mautic_url = 'http://appserver.mauticapp.internal';
        $auth = base64_encode($username . ':' . $api_key);
        $client = \Drupal::httpClient();
    
        try {
          $response = $client->get($mautic_url . '/api/segments', [
            'headers' => [
              'Authorization' => 'Basic ' . $auth,
            ],
            'verify' => FALSE,
          ]);

          if ($response->getStatusCode() !== 200) {
            \Drupal::logger('MauticAPI')->error('Failed to fetch segments from Mautic. Status code: @status', ['@status' => $response->getStatusCode()]);
            return [];
          }
    
          $data = json_decode($response->getBody()->getContents(), TRUE);
    
          if (isset($data['lists'])) {
            return $data['lists'];
          }
          else {
            \Drupal::logger('MauticAPI')->error('Mautic segments not found in the API response.');
            return [];
          }
        }
  catch (\Exception $e) {
    \Drupal::logger('MauticAPI')->error('Failed to fetch Mautic segments: ' . $e->getMessage());
    return [];
  }
}

function MauticAPI_fetch_and_sync_segments() {
  $segments = MauticAPI_fetch_mautic_segments();
  
  foreach ($segments as $segment) {
    if (empty($segment['name'])) {
      \Drupal::logger('MauticAPI')->error('Segment name is missing for segment ID: @id', ['@id' => $segment['id'] ?? 'unknown']);
      continue;
    }
    $query = \Drupal::entityQuery('node')
      ->condition('type', 'mautic_segments')
      ->condition('field_segment_id', $segment['id'])
      ->accessCheck(FALSE)
      ->execute();
    
    if (empty($query)) {
      $node = \Drupal\node\Entity\Node::create([
        'type' => 'mautic_segments',
        'title' => $segment['name'],
        'field_segment_name' => ['value' => $segment['name']],
        'field_segment_id' => ['value' => $segment['id']],
        'status' => 1,
        'uid' => 1,
      ]);
      $node->save();

      \Drupal::logger('MauticAPI')->notice('Created new segment: @name (ID: @id)', [
        '@name' => $segment['name'],
        '@id' => $segment['id']
      ]);
    }
  }
}




  function MauticAPI_cron() {
    \Drupal::logger('MauticAPI')->notice('Running Mautic segment sync via cron');
    MauticAPI_fetch_and_sync_segments();
  }



function MauticAPI_entity_base_field_info_alter(&$fields, \Drupal\Core\Entity\EntityTypeInterface $entity_type) {
  if ($entity_type->id() === 'node') {
    if (isset($fields['field_segment_name'])) {
      $fields['field_segment_name']->setDisplayConfigurable('view', TRUE);
    }
    if (isset($fields['field_segment_id'])) {
      $fields['field_segment_id']->setDisplayConfigurable('view', TRUE);
    }
  }
}

